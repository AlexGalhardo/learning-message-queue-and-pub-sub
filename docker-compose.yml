services:
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: 'rabbitmq'
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
            - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
        networks:
            - network

    localstack:
        container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
        image: localstack/localstack
        ports:
            - "127.0.0.1:4566:4566"
            - "127.0.0.1:4510-4559:4510-4559"
        environment:
            - DEBUG=${DEBUG:-0}
            - PERSISTENCE=${PERSISTENCE-}
            - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
            # - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY-} # only required for Pro
            - DOCKER_HOST=unix:///var/run/docker.sock
        volumes:
            - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
            - "/var/run/docker.sock:/var/run/docker.sock"

    redis:
        image: redis:latest
        container_name: redis
        restart: unless-stopped
        ports:
            - "6379:6379"

    zookeeper:
        image: confluentinc/cp-zookeeper:7.2.1
        ports:
          - "2181:2181"
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:7.2.1
        ports:
          - "9092:9092"
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: host.docker.internal:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKAJS_NO_PARTITIONER_WARNING: 1

networks:
    network:
        driver: bridge

volumes:
    postgres:
        driver: local
